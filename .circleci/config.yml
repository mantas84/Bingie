version: 2.1
orbs:
  slack: circleci/slack@3.4.2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
        # Set TraktTv Api Key with environment variables
      - run: echo "TRAKT_CLIENT_ID=$TRAKT_CLIENT_ID" >> ~/code/apikey.properties
      - run: echo "TRAKT_CLIENT_SECRET=$TRAKT_CLIENT_SECRET" >> ~/code/apikey.properties
      - run: echo "TRAKT_CLIENT_ID_DEV=$TRAKT_CLIENT_ID_DEV" >> ~/code/apikey.properties
      - run: echo "TRAKT_CLIENT_SECRET_DEV=$TRAKT_CLIENT_SECRET_DEV" >> ~/code/apikey.properties
      - run: echo "TMDB_TOKEN=TMDB_TOKEN" >> ~/code/apikey.properties
      - run: echo "TVDB_KEY=TVDB_KEY" >> ~/code/apikey.properties
      - run: echo "FANART_KEY=FANART_KEY" >> ~/code/apikey.properties
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test --stacktrace
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - slack/status:
            fail_only: true
#            mentions: 'USERID1,USERID2'
#            only_for_branches: only_for_branches
            webhook: $SLACK_WEBHOOK

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - dev
